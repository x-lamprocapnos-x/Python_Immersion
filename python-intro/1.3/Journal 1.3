Learning Goals

⦁	Implement conditional statements in Python to determine program flow
⦁	Use loops to reduce time and effort in Python programming
⦁	Write functions to organize Python code

Reflection Questions

1.	In this Exercise, you learned how to use if-elif-else statements to run different tasks based on conditions that you define. 
Now practice that skill by writing a script for a simple travel app using an if-elif-else statement for the following situation: 

⦁	The script should ask the user where they want to travel. 
⦁	The user’s input should be checked for 3 different travel destinations that you define. 
⦁	If the user’s input is one of those 3 destinations, the following statement should be printed: “Enjoy your stay in ______!”
⦁	If the user’s input is something other than the defined destinations, the following statement should be printed: “Oops, that destination is not currently available.”
	
Write your script here. (Hint: remember what you learned about indents!)

------------------------------------------------------------------------------------
destination_1 = "New York"
destination_2 = "Wyoming"
destination_3 = "California"

user_destination = input("Where would you like to go? ")

if user_destination.capitalize() = destination_1:
    print("Enjoy your stay in {destination_1}!")
elif user_destination.capitalize() = destination_2:
    print("Enjoy your stay in {destination_2}!")
elif user_destination.capitalize() = destination_3:
    print("Enjoy your stay in {destination_3}!")
else:
    print("Oops, that destination is not currently available.")
------------------------------------------------------------------------------------

2.	Imagine you’re at a job interview for a Python developer role. The interviewer says “Explain logical operators in Python”. Draft how you would respond.

A: Logical operators allow you to compare multiple conditions and respond with true or false depending on the input given. 
These logic operators are the "and, or, and not". 
if both "and" condions are met it will return true, 
if one of the "or" conditions are met, it will return true,
and the "not operator does not need conditions met, however it will reverse the result of the other operators.

3.	What are functions in Python? When and why are they useful?

A: Functions in python are reusable blocks of code, that can be built to carry out specific tasks. Python functions can be used when you want to
avoid repetitive logic, improve code management and organization, and make debugging easier by isolating issues to one function, even if it is used
across multiple parts in your project.


4.	In the section for Exercise 1 in this Learning Journal, you were asked in question 3 to set some goals for yourself while you complete this course.  
In preparation for your next mentor call, make some notes on how you’ve progressed towards your goals so far.

A: My first goal is coming to light in some ways, I feel like I'm getting a stronger grasp on what automation python has to offer. I can navigate 
python more with each task and each practice, I actually really enjoy the practice sets in each lesson. However confidence is something I will 
always second guess, I've found I don't understand what is asked of me until I get chat GPT to ask me in a different way, but once I do that, I
know where to start and what is required. This course hasn't gone into backend logic so much but I have read the next section covers that, and I
am excited. 
