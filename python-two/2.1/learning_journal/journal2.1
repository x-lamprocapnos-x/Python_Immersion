Learning Goals 
 
Explain MVT architecture and compare it with MVC 
Summarize Django’s benefits and drawbacks  
Install and get started with Django 
 
Reflection Questions 
 
1. Suppose you’re a web developer in a company and need to decide if you’ll use vanilla (plain) Python for a project, or a framework like Django instead. What are the advantages and drawbacks of each?

Using vanilla Python allows for a smaller project with full control over code structure and behavior. However, it requires manually handling database connections, routing, security, and templating, which increases development time.
On the other hand, Django speeds up development with built-in features like authentication, database object relational mapping, an admin panel, and security mechanisms. 
Its structured approach enforces good coding practices and is well-suited for large, complex projects. 
However, Django can be overkill for simple applications and its rigid structure limits development flexibility.


2. In your own words, what is the most significant advantage of Model View Template (MVT) architecture over Model View Controller (MVC) architecture? 

The most significant advantage of MVT is the low level operations and control flows being pre- built with django instead of having to code it as the developer. 
MVT is also loosely coupled giving you the freedom to add and embellish on components where as MVC is tightly coupled making it harder or impossible for you add new hardware or components


3. Now that you’ve had an introduction to the Django framework, write down three goals you have for yourself and your learning process during this Achievement. You can reflect on the following questions if it helps: 
What do you want to learn about Django?  

I would like to explore what additional tools and components I could integrate to enhance Django’s capabilities.


4. What do you want to get out of this Achievement?  

I want to fully understand Django’s structure and enjoy working with it, gaining confidence in building real-world web applications


5. Where or what do you see yourself working on after you complete this Achievement?

I plan to start by remaking my portfolio using Django, then move on to job hunting while continuously improving and experimenting with my past projects.


